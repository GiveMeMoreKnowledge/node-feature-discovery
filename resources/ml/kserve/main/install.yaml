---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nova-kserve-controller-manager
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-controller-manager
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inferenceservice-config
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-controller-manager
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
data:
  agent: |-
    {
        "image" : "kserve/agent:v0.15.2",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1"
    }
  batcher: |-
    {
        "image" : "kserve/agent:v0.15.2",
        "memoryRequest": "1Gi",
        "memoryLimit": "1Gi",
        "cpuRequest": "1",
        "cpuLimit": "1",
        "maxBatchSize": "32",
        "maxLatency": "5000"
    }
  router: |-
    {
        "image" : "kserve/router:v0.15.2",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "imagePullPolicy": "IfNotPresent",
        "imagePullSecrets": []
    }
  credentials: |-
    {
       "storageSpecSecretName": "storage-config",
       "storageSecretNameAnnotation": "serving.kserve.io/secretName",
       "s3": {
           "s3AccessKeyIDName": "",
           "s3SecretAccessKeyName": "",
           "s3Endpoint": "",
           "s3UseHttps": "1",
           "s3Region": "",
           "s3VerifySSL": "true",
           "s3UseVirtualBucket": "false",
           "s3UseAnonymousCredential": "false",
           "s3CABundle": ""
       }
    }
  deploy: |-
    {
      "defaultDeploymentMode": "RawDeployment"
    }
  service: |-
    {
      "serviceClusterIPNone": false
    }
  explainers: |-
    {
        "art": {
            "image" : "kserve/art-explainer",
            "defaultImageVersion": "v0.15.2"
        }
    }
  ingress: |-
    {   
        "enableGatewayApi": false,
        "kserveIngressGateway" : "nova-kserve/kserve-ingress-gateway",
        "ingressGateway" : "knative-serving/knative-ingress-gateway",
        "knativeLocalGatewayService" : "",
        "localGateway" : "",
        "localGatewayService" : "",
        "ingressClassName" : "nginx-public",
        "ingressDomain"  : "${mlBaseDomain}",
        "additionalIngressDomains": [],
        "domainTemplate": "{{ .Name }}-{{ .Namespace }}.{{ .IngressDomain }}",
        "urlScheme": "https",
        "disableIstioVirtualHost": true,
        "disableIngressCreation": true
    }
  logger: |-
    {
        "image" : "kserve/agent:v0.15.2",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "defaultUrl": "http://default-broker"
    }
  storageInitializer: |-
    {
        "image" : "kserve/storage-initializer:v0.15.2",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "enableDirectPvcVolumeMount": true,
        "caBundleConfigMapName": "",
        "caBundleVolumeMountPath": "/etc/ssl/custom-certs",
        "enableModelcar": true,
        "cpuModelcar": "10m",
        "memoryModelcar": "15Mi"
    }
  metricsAggregator: |-
    {
      "enableMetricAggregation": "false",
      "enablePrometheusScraping" : "true"
    }
  localModel: |-
    {
      "enabled": false,
      "jobNamespace": "kserve-localmodel-jobs",
      "jobTTLSecondsAfterFinished": 3600,
      "defaultJobImage": "kserve/storage-initializer:latest",
      "fsGroup": 1000,
      "reconcilationFrequencyInSecs": 60,
      "disableVolumeManagement": false
    }
  security: |-
    {
      "autoMountServiceAccountToken": true
    }

  inferenceService: |-
    {
      "resource": {
        "cpuLimit": "1",
        "cpuRequest": "1",
        "memoryLimit": "2Gi",
        "memoryRequest": "2Gi"
      }
    }

  opentelemetryCollector: |-
    { 
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nova-kserve-manager-role
  labels:
    app.kubernetes.io/name: nova-kserve-manager-role
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - events
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
      - serviceaccounts
    verbs:
      - get
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - keda.sh
    resources:
      - scaledobjects
      - scaledobjects/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - keda.sh
    resources:
      - scaledobjects/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices
      - virtualservices/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - opentelemetry.io
    resources:
      - opentelemetrycollectors
      - opentelemetrycollectors/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - opentelemetry.io
    resources:
      - opentelemetrycollectors/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - serving.knative.dev
    resources:
      - services
      - services/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - serving.knative.dev
    resources:
      - services/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - serving.kserve.io
    resources:
      - clusterservingruntimes
      - clusterservingruntimes/finalizers
      - clusterstoragecontainers
      - inferencegraphs
      - inferencegraphs/finalizers
      - inferenceservices
      - inferenceservices/finalizers
      - servingruntimes
      - servingruntimes/finalizers
      - trainedmodels
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - serving.kserve.io
    resources:
      - clusterservingruntimes/status
      - inferencegraphs/status
      - inferenceservices/status
      - servingruntimes/status
      - trainedmodels/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - serving.kserve.io
    resources:
      - localmodelcaches
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nova-kserve-leader-election-role
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-leader-election-role
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nova-kserve-manager-rolebinding
  labels:
    app.kubernetes.io/name: nova-kserve-manager-rolebinding
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nova-kserve-manager-role
subjects:
  - kind: ServiceAccount
    name: nova-kserve-controller-manager
    namespace: nova-kserve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nova-kserve-leader-election-rolebinding
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-leader-election-rolebinding
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nova-kserve-leader-election-role
subjects:
  - kind: ServiceAccount
    name: nova-kserve-controller-manager
    namespace: nova-kserve
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nova-kserve-controller-manager
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-controller-manager
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
  annotations:
    configmap.reloader.stakater.com/reload: "inferenceservice-config"
    secret.reloader.stakater.com/reload: "nova-kserve-webhook-server-cert"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nova-kserve-controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nova-kserve-controller-manager
    spec:
      serviceAccountName: nova-kserve-controller-manager
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /manager
          image: "${imageRepository}/kserve/kserve:v0.15.2-nova"
          imagePullPolicy: IfNotPresent
          name: manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          args:
            - "--metrics-addr=127.0.0.1:8080"
            - "--leader-elect"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SECRET_NAME
              value: nova-kserve-webhook-server-cert
            - name: CA_BUNDLE_FILENAME
              value: ca-certificates.pem
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            httpGet:
              path: /healthz
              port: 8081
            timeoutSeconds: 5
          readinessProbe:
            initialDelaySeconds: 30
            failureThreshold: 5
            periodSeconds: 5
            httpGet:
              path: /readyz
              port: 8081
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      terminationGracePeriodSeconds: 10
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations: []
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: nova-kserve-webhook-server-cert
---
apiVersion: v1
kind: Service
metadata:
  name: nova-kserve-webhook-server-service
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-webhook-server-service
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
spec:
  selector:
    app.kubernetes.io/name: nova-kserve-controller-manager
  ports:
    - port: 443
      targetPort: webhook-server
---
apiVersion: v1
kind: Service
metadata:
  name: nova-kserve-controller-manager-service
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: nova-kserve-controller-manager-service
    app.kubernetes.io/version: v0.15.2
    app.kubernetes.io/managed-by: Nova
spec:
  ports:
    - port: 8443
      targetPort: https
      protocol: TCP
  selector:
    app.kubernetes.io/name: nova-kserve-controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: inferenceservice.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /mutate-serving-kserve-io-v1beta1-inferenceservice
    failurePolicy: Fail
    name: inferenceservice.kserve-webhook-server.defaulter
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - inferenceservices
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /mutate-pods
    failurePolicy: Fail
    name: inferenceservice.kserve-webhook-server.pod-mutator
    sideEffects: None
    reinvocationPolicy: IfNeeded
    admissionReviewVersions: ["v1beta1"]
    objectSelector:
      matchExpressions:
        - key: serving.kserve.io/inferenceservice
          operator: Exists
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: inferenceservice.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /validate-serving-kserve-io-v1beta1-inferenceservice
    failurePolicy: Fail
    name: inferenceservice.kserve-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - inferenceservices
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: trainedmodel.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /validate-serving-kserve-io-v1alpha1-trainedmodel
    failurePolicy: Fail
    name: trainedmodel.kserve-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - trainedmodels
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: inferencegraph.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /validate-serving-kserve-io-v1alpha1-inferencegraph
    failurePolicy: Fail
    name: inferencegraph.kserve-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - inferencegraphs
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: clusterservingruntime.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /validate-serving-kserve-io-v1alpha1-clusterservingruntime
    failurePolicy: Fail
    name: clusterservingruntime.kserve-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusterservingruntimes
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: servingruntime.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /validate-serving-kserve-io-v1alpha1-servingruntime
    failurePolicy: Fail
    name: servingruntime.kserve-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - servingruntimes
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: localmodelcache.serving.kserve.io
  annotations:
    cert-manager.io/inject-ca-from: nova-kserve/nova-kserve-serving-cert
webhooks:
  - clientConfig:
      service:
        name: nova-kserve-webhook-server-service
        namespace: nova-kserve
        path: /validate-serving-kserve-io-v1alpha1-localmodelcache
    failurePolicy: Fail
    name: localmodelcache.kserve-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - serving.kserve.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - localmodelcaches
