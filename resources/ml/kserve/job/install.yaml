---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kserve-create-secret
  namespace: nova-kserve
  labels:
    app.kubernetes.io/name: kserve-create-secret
    app.kubernetes.io/managed-by: Nova
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kserve-create-secret
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: kserve-create-secret
    namespace: nova-kserve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nova-kserve:secrets-webhook-mutation-helper
  namespace: nova-kserve
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kserve-vault-secret-create
  namespace: nova-kserve
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "watch"
      - "list"
      - "create"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nova-kserve:secrets-webhook-mutation-helper
  namespace: nova-kserve
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nova-kserve:secrets-webhook-mutation-helper
subjects:
  - kind: ServiceAccount
    name: kserve-create-secret
    namespace: nova-kserve
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kserve-vault-secret-create
  namespace: nova-kserve
subjects:
  - kind: ServiceAccount
    name: kserve-create-secret
    namespace: nova-kserve
roleRef:
  kind: Role
  name: kserve-vault-secret-create
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kserve-generate-config-secret
  namespace: nova-kserve
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nova-kserve
        app.kubernetes.io/instance: kserve-generate-config-secret
      annotations:
        kubectl.kubernetes.io/default-container: create-secret
        vault.security.banzaicloud.io/vault-path: nova-kubernetes
        vault.security.banzaicloud.io/vault-role: nova-system-kserve
        vault.security.banzaicloud.io/vault-trust-manager-tls-bundle: "trusted-ca-bundle"
        vault.security.banzaicloud.io/run-as-non-root: "true"
    spec:
      serviceAccountName: kserve-create-secret
      priorityClassName: system-cluster-critical
      restartPolicy: Never
      initContainers:
        - name: secrets-webhook-mutation-helper
          image: ${imageRepository}/nova/secrets-webhook-mutation-helper:v1.0.0
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          env:
            - name: CA_CERT_PATH
              value: /etc/ssl/certs/ca-certificates.crt
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: trusted-ca-bundle
              readOnly: true
      containers:
        - name: create-secret
          image: ${imageRepository}/nova/kserve-secret-provisioner:v1.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
          env:
            - name: MINIO_ACCESS_KEY
              value: vault:nova-secrets/data/credentials/ml/minio#root_user
            - name: MINIO_SECRET_KEY
              value: vault:nova-secrets/data/credentials/ml/minio#root_password
            - name: MINIO_ENDPOINT_URL
              value: "https://minio.nova-minio.svc"
            - name: MINIO_BUCKET
              value: "mlflow"
            - name: MINIO_REGION
              value: "ru-nova-1"
            - name: MINIO_CABUNDLE_CONFIGMAP
              value: "trusted-ca-bundle"
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: trusted-ca-bundle
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations: []
      volumes:
        - name: trusted-ca-bundle
          configMap:
            name: trusted-ca-bundle
            items:
              - key: ca-certificates.pem
                path: ca-certificates.crt
